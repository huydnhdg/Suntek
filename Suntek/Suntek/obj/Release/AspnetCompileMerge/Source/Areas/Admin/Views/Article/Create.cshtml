@model Suntek.Models.Article

@{
    ViewBag.Title = "Create";
}
@section scripts{
    <script>
        function bodauTiengViet(str) {
            str = str.toLowerCase();

            str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a");
            str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, "e");
            str = str.replace(/ì|í|ị|ỉ|ĩ/g, "i");
            str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, "o");
            str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u");
            str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y");
            str = str.replace(/đ/g, "d");
            return str;
        }

        function changeToUrlRewrite(str) {
            str = bodauTiengViet(str).trim().replace(/[ /]/g, "-");

            return str;
        }
        $(document).ready(function () {
            $("#Title").keypress(function () {
                var khongdau = bodauTiengViet($("#Title").val()).trim().replace(/[ /]/g, "-");
                $("#Link").val(khongdau);
            });
        })
    </script>
}
<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Article</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Image, new { @class = "form-control", id = "txtImage" })
            <a href="#" id="btnSelectImage">Chọn ảnh</a>
            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" }, id = "editor" })
            @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.Createdate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Createdate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Createdate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.CountView, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CountView, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CountView, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group hidden">
        @Html.LabelFor(model => model.Partner, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Partner, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Partner, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.IDCate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.IDCate,
                  new List<SelectListItem>
                    {
                    new SelectListItem { Value = "1" , Text = "Chính sách bảo hành" },
                    new SelectListItem { Value = "2" , Text = "Footer" },
                    new SelectListItem { Value = "3" , Text = "Trạm bảo hành" },
                    new SelectListItem { Value = "4" , Text = "Số Hotline" },
                    },
                    new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IDCate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
